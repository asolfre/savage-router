<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 20010904//EN"
    "http://www.w3.org/TR/2001/REC-SVG-20010904/DTD/svg10.dtd" [
    <!ATTLIST svg
              xmlns:a3 CDATA #IMPLIED
              a3:scriptImplementation CDATA #IMPLIED>
    <!ATTLIST script
              a3:scriptImplementation CDATA #IMPLIED>
]>
<svg width="320" height="330" onload="make_shape(evt)"
     xmlns="http://www.w3.org/2000/svg"
     xmlns:xlink="http://www.w3.org/1999/xlink"
     xmlns:a3="http://ns.adobe.com/AdobeSVGViewerExtensions/3.0/"
     a3:scriptImplementation="Adobe">
    <script type="text/ecmascript" a3:scriptImplementation="Adobe"
            xlink:href="KEL_3D.js" />
    <script type="text/ecmascript" a3:scriptImplementation="Adobe"
            xlink:href="Slider.js" />
    <script type="text/ecmascript" a3:scriptImplementation="Adobe"
            xlink:href="Node_Builder.js" />
    <script type="text/ecmascript" a3:scriptImplementation="Adobe"><![CDATA[
        var origin;
        var controls;

        var mesh;
        var slider_tx, slider_ty, slider_tz;
        var slider_rx, slider_ry, slider_rz;
        var z_projection = 90;
        var transform = new Transform();

        function make_shape(e) {
            if ( window.svgDocument == null )
                svgDocument = e.target.ownerDocument;

            origin   = svgDocument.getElementById("origin");
            controls = svgDocument.getElementById("controls");

            mesh = new Mesh3D(origin);

            slider_tx = new Slider(65, 235, 180, 0, adjust_translate, controls);
            slider_ty = new Slider(235, 195, 180, 270, adjust_translate, controls);
            slider_tz = new Slider(260, 195, 180, 270, adjust_translate, controls);

            slider_rx = new Slider(65, 260, 180, 0, adjust_rotation, controls);
            slider_ry = new Slider(65, 285, 180, 0, adjust_rotation, controls);
            slider_rz = new Slider(285, 195, 180, 270, adjust_rotation, controls);

            make_box();

            slider_tx.set_minmax(-50, 50);
            slider_ty.set_minmax(50, -50);
            slider_tz.set_minmax(90, 310);
            slider_rx.set_minmax(Math.PI, -Math.PI);
            slider_ry.set_minmax(Math.PI, -Math.PI);
            slider_rz.set_minmax(Math.PI, -Math.PI);
        }

        function make_box() {
            var p1 = mesh.add_vertex(-20, -20, -20);
            var p2 = mesh.add_vertex(-20, -20,  20);
            var p3 = mesh.add_vertex(-20,  20,  20);
            var p4 = mesh.add_vertex(-20,  20, -20);
            var p5 = mesh.add_vertex( 20, -20, -20);
            var p6 = mesh.add_vertex( 20, -20,  20);
            var p7 = mesh.add_vertex( 20,  20,  20);
            var p8 = mesh.add_vertex( 20,  20, -20);

            mesh.add_edge(p1, p2);
            mesh.add_edge(p2, p3);
            mesh.add_edge(p3, p4);
            mesh.add_edge(p4, p1);

            mesh.add_edge(p1, p5);
            mesh.add_edge(p2, p6);
            mesh.add_edge(p3, p7);
            mesh.add_edge(p4, p8);

            mesh.add_edge(p5, p6);
            mesh.add_edge(p6, p7);
            mesh.add_edge(p7, p8);
            mesh.add_edge(p8, p5);

            //mesh.draw2(transform);
        }

        function adjust_translate(position) {
            transform.translate(slider_tx.value, slider_ty.value, slider_tz.value);
            mesh.draw(transform);
        }

        function adjust_rotation() {
            transform.rotate(slider_rz.value, slider_rx.value, slider_ry.value);
            mesh.draw(transform);
        }
    ]]></script>
    <rect width="100%" height="100%" style="fill:white" />
    <g id="origin" transform="translate(115,115)">
        <rect x="-100" y="-100" width="200" height="200" style="fill: rgb(230,255,234)" />
    </g>
    <g id="controls">
        <text x="30" y="245">x</text>
        <text x="30" y="270">yaw</text>
        <text x="30" y="295">roll</text>
        <text x="240" y="220">y</text>
        <text x="265" y="220">z</text>
        <text x="290" y="220">pitch</text>
    </g>
</svg>
